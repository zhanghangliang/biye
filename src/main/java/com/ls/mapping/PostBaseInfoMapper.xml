<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ls.dao.PostBaseInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ls.entity.PostBaseInfo" >
    <id column="post_id" property="postId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="post_img" property="postImg" jdbcType="VARCHAR" />
    <result column="post_title" property="postTitle" jdbcType="VARCHAR" />
    <result column="post_time" property="postTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ls.entity.PostBaseInfo" extends="BaseResultMap" >
    <result column="post_intro" property="postIntro" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    post_id, user_id, post_img, post_title, post_time
  </sql>
  <sql id="Blob_Column_List" >
    post_intro
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.ls.entity.PostBaseInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from post_base_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ls.entity.PostBaseInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from post_base_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from post_base_info
    where post_id = #{postId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from post_base_info
    where post_id = #{postId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ls.entity.PostBaseInfoExample" >
    delete from post_base_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ls.entity.PostBaseInfo" useGeneratedKeys="true" keyProperty="postId">
    insert into post_base_info (post_id, user_id, post_img, 
      post_title, post_time, post_intro
      )
    values (#{postId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{postImg,jdbcType=VARCHAR}, 
      #{postTitle,jdbcType=VARCHAR}, #{postTime,jdbcType=TIMESTAMP}, #{postIntro,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ls.entity.PostBaseInfo" >
    insert into post_base_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="postId != null" >
        post_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="postImg != null" >
        post_img,
      </if>
      <if test="postTitle != null" >
        post_title,
      </if>
      <if test="postTime != null" >
        post_time,
      </if>
      <if test="postIntro != null" >
        post_intro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="postId != null" >
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="postImg != null" >
        #{postImg,jdbcType=VARCHAR},
      </if>
      <if test="postTitle != null" >
        #{postTitle,jdbcType=VARCHAR},
      </if>
      <if test="postTime != null" >
        #{postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="postIntro != null" >
        #{postIntro,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ls.entity.PostBaseInfoExample" resultType="java.lang.Integer" >
    select count(*) from post_base_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update post_base_info
    <set >
      <if test="record.postId != null" >
        post_id = #{record.postId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.postImg != null" >
        post_img = #{record.postImg,jdbcType=VARCHAR},
      </if>
      <if test="record.postTitle != null" >
        post_title = #{record.postTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.postTime != null" >
        post_time = #{record.postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.postIntro != null" >
        post_intro = #{record.postIntro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update post_base_info
    set post_id = #{record.postId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      post_img = #{record.postImg,jdbcType=VARCHAR},
      post_title = #{record.postTitle,jdbcType=VARCHAR},
      post_time = #{record.postTime,jdbcType=TIMESTAMP},
      post_intro = #{record.postIntro,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update post_base_info
    set post_id = #{record.postId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      post_img = #{record.postImg,jdbcType=VARCHAR},
      post_title = #{record.postTitle,jdbcType=VARCHAR},
      post_time = #{record.postTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ls.entity.PostBaseInfo" >
    update post_base_info
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="postImg != null" >
        post_img = #{postImg,jdbcType=VARCHAR},
      </if>
      <if test="postTitle != null" >
        post_title = #{postTitle,jdbcType=VARCHAR},
      </if>
      <if test="postTime != null" >
        post_time = #{postTime,jdbcType=TIMESTAMP},
      </if>
      <if test="postIntro != null" >
        post_intro = #{postIntro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where post_id = #{postId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ls.entity.PostBaseInfo" >
    update post_base_info
    set user_id = #{userId,jdbcType=INTEGER},
      post_img = #{postImg,jdbcType=VARCHAR},
      post_title = #{postTitle,jdbcType=VARCHAR},
      post_time = #{postTime,jdbcType=TIMESTAMP},
      post_intro = #{postIntro,jdbcType=LONGVARCHAR}
    where post_id = #{postId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ls.entity.PostBaseInfo" >
    update post_base_info
    set user_id = #{userId,jdbcType=INTEGER},
      post_img = #{postImg,jdbcType=VARCHAR},
      post_title = #{postTitle,jdbcType=VARCHAR},
      post_time = #{postTime,jdbcType=TIMESTAMP}
    where post_id = #{postId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseMap" type="com.ls.entity.PostBaseInfo" >
    <id column="post_id" property="postId"/>
    <result column="user_id" property="userId"/>
    <result column="post_img" property="postImg"/>
    <result column="post_title" property="postTitle"/>
    <result column="post_time" property="postTime"/>
    <result column="post_intro" property="postIntro"/>
  </resultMap>
  <select id="selectPostBaseInfoByLimit" resultMap="BaseMap">
	  select * from post_base_info WHERE post_title LIKE #{arg1} limit ${arg2},30
  </select>
</mapper>